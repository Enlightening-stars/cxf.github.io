<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何跨进安全行业-走进移动安全(1)</title>
      <link href="/2022/05/19/ru-he-kua-jin-an-quan-xing-ye/"/>
      <url>/2022/05/19/ru-he-kua-jin-an-quan-xing-ye/</url>
      
        <content type="html"><![CDATA[<p>最近因为疫情原因工作之余和朋友们闲聊了一会，本来是学的计算机却没有真正跨进这个行业，有的去当了客服，有的去做了销售；现在回头望去，大学美好的时光都浪费在一起去网吧打游戏上面了。没有方向感，仿佛一眼就能看到未来，看到几十年后的自己，想抓住一个方向。但是根本不知道去干什么，去培训的话，机构很贵也是怕踩坑。由于我呢从高中便有人带着学习这块，可能会有一些经验供他们参考。现在也是知识星球里定期分享一些知识、工具，但是对于小白来说星球的知识门槛有些高，看不懂，读不明白。所以我决定工作之余，和他们走一段从零开始-跨进安全行业的路！</p><h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><p>想进这个行业，首先我们最关心的当然是这个行业的前景、未来、薪酬待遇。<br>由于近几年国家政策-没有网络安全就没有国家安全！再加上5g等科技的迅速发展。网络安全成为了一个，人才比较稀缺的行业，后面的发展空间也是挺可观的，物以稀为贵。所以薪酬待遇也蛮不错。我们简单看张薪酬图吧，当然这个是根据个人能力、知识来决定的。咱们这里只是简单展望</p><img src="/.com//1.jpg" width="30%"><!-- <img src="../_posts/如何跨进安全行业/1.jpg" width="30%"> --><h2 id="抉择"><a href="#抉择" class="headerlink" title="抉择"></a>抉择</h2><p> 网络安全是一个大方向下面还可简单分为 Web安全、 云安全、移动安全、 工控安全、等等方向，对应岗位有渗透测试 逆向分析 、安全服务 、代码审计、漏洞挖掘等这里就不一一举例了。那么多岗位怎么选?大家不用迷茫，其实当你真正走进安全圈就会根据自己的喜好体验不同的岗位，我也是从事过不同岗位移动逆向-安全研究-渗透测试。说白了就是一个不断学习跳槽加薪的一个过程。不强行让大家一定要选择哪一块，这些东西都有一定的联系，我们先从某一个方向先走进这个圈子，再根据自己的喜好去选择是最好的方式。<br> 由于本人的知识和能力有限只能陪着大家走一段移动安全的路，顺带一点web渗透。好了废话不多说咱们直接开始吧!</p><h2 id="走进移动安全"><a href="#走进移动安全" class="headerlink" title="走进移动安全"></a>走进移动安全</h2><h3 id="学会查看应用信息"><a href="#学会查看应用信息" class="headerlink" title="学会查看应用信息"></a>学会查看应用信息</h3><p>有些应用为了防止被分析或者破解，会采用第三方的加固，来做防护，从而加大分析难度<br>手机助手：<a href="http://zhushou.360.cn/">http://zhushou.360.cn/</a></p><p>首先我们从手机助手上下先下载几个手机应用到文件夹下备用</p><img src="/.com//2.png"><!-- <img src="../_posts/如何跨进安全行业/2.png"> --><p>我们借助ApkMessenger</p><p>链接：<a href="https://pan.baidu.com/s/1jLa70g7V1yFYP4vKFy3_vw">https://pan.baidu.com/s/1jLa70g7V1yFYP4vKFy3_vw</a><br>提取码：7980</p><p>会用github的同学就去github取下食用</p><p><a href="https://github.com/sulab999/ApkMessenger">https://github.com/sulab999/ApkMessenger</a></p><p>下载解压是一个jar包，我们双击运行即可（该工具需具备java环境，未配置环境的小朋友的需要移步至此 （<a href="https://blog.csdn.net/xhmico/article/details/122390181%EF%BC%89">https://blog.csdn.net/xhmico/article/details/122390181）</a><br>我们用此工具来帮助我们查看应用的基本信息。(有些特殊加固可能识别不出来，具体是否做了加固需要反编译查看)   </p><p>将我们准备的应用拖进来查看<br>目前我们主要关注加固类型，看是否做了加固其次是应用包名，如有加固我们分析时需要进行脱壳处理。<br>目前主流的加固有 邦邦、爱加密、腾讯乐固、阿里聚安全等。</p><img src="/.com//3.png" width="80%"><!-- <img src="../_posts/如何跨进安全行业/3.png" width="80%"> --><p>你真棒同学！ 至此我们已经学会让应用的基本信息在我们面前无处遁形了！<br>下面我们继续进行下一步</p><h2 id="应用目录简介"><a href="#应用目录简介" class="headerlink" title="应用目录简介"></a>应用目录简介</h2><p>我们再来了解应用的格式，我们可以看到前面下载的应用全是.apk结尾的文件，这个apk文件可以作为压缩包解压打开，将app后缀重命名为.zip并解压，目录如下：</p><img src="/.com//4.png"><!-- <img src="../_posts/如何跨进安全行业/4.png"> --><p>文件目录说明：<br><img src="/.com//5.png"></p><!-- <img src="../_posts/如何跨进安全行业/5.png"> --><p>基础不太好的同学没关系，我们目前先关注classes.dex、classes2.dex …. 的文件<br>我们先这样理解：</p><p>dex文件就是包含的就是主要代码逻辑，部分逻辑可能会走到so文件，这个我们后续再讲，所以逆向的时候主要是拿dex进行反编译分析， 而加固就是对dex文件进行加密，所以脱壳就是想办法去拿到解密后的dex文件。</p><h2 id="Android反编译理解"><a href="#Android反编译理解" class="headerlink" title="Android反编译理解"></a>Android反编译理解</h2><p>反编译，反编译顾名思义，反向编译，我们先来补下知识</p><p>百度百科：</p><p>计算机软件反向工程（Reverse engineering）也称为计算机软件还原工程，是指通过对他人软件的目标程序（比如可执行程序）进行“逆向分析、研究”工作，以推导出他人的软件产品所使用的思路、原理、结构、算法、处理过程、运行方法等设计要素，某些特定情况下可能推导出源代码。反编译作为自己开发软件时的参考，或者直接用于自己的软件产品中。</p><p>而dex文件是java源代码经编译后生成dalvik虚拟机可执行文件，简化过程如下：</p><pre class=" language-mermaid"><code class="language-mermaid">graph LR    1[java文件] --> 2[classs文件] --> 3[dex文件]</code></pre><p>Google公司已经在Android5.0以后已经抛弃Dalvik改用ART虚拟机不过呢，目前ART虚拟机相较于dalvik虚拟机算是一种升级加快了应用运行效率，没有本质的区别，从逆向的角度来看我们处理的其实还是dex文件。</p><p>好了本篇至此就结束了，可能有些同学对有些知识不太理解，没关系，欢迎同学指出不理解的地方！<br>课后作业：准备下抓包工具fiddler,与模拟器（有真机的同学尽量使用测试机）<br>fiddler 官网<br><a href="https://www.telerik.com/fiddler">https://www.telerik.com/fiddler</a><br>安装经典版本即可<br><img src="/.com//6.png" width="70%"></p><!-- <img src="../_posts/如何跨进安全行业/6.png" width="70%"> --><p>模拟器的话使用雷电、逍遥等都可以自行安装哦。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mariana Trench的使用</title>
      <link href="/2022/05/15/mariana-de-shi-yong/"/>
      <url>/2022/05/15/mariana-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>Mariana Trench 以Android安全为中心的静态分析平台，该工具提供可扩展的全局污点分析，并且支持自定义规则,强大之处是可以帮我们进行代码跟踪，比较适合挖Android漏洞。<br>可以用他帮我们静态扫出可能存在的漏洞，然后人工验证。</p><p>官方文档： <a href="https://mariana-tren.ch/docs/getting-started/">https://mariana-tren.ch/docs/getting-started/</a></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>使用python的pip直接安装即可(注意：Mac不支持 pip install，win上安装似乎也是有些问题，尽量使用linux)</p><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> mariana-trench</code></pre><p>官方给出的demo我们就不试用了，有兴趣的可以移步至官网，这里我们测试下其他的应用。</p><p>使用jadx应用进行反编译，快捷键ctrl e导出源代码<br>##<br><img src="../../images/d1a38eddac680436d4303d54c46c8fdff18fa0f0484359d10ccc67eb3fb70971.png" alt="图 1">  </p><pre><code>mariana-trench \  --system-jar-configuration-path=/home/cxf/桌面/android_jar/android.jar --apk-path=test.apk \  --source-root-directory=app/src/main/java</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Android漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android-10源码编译</title>
      <link href="/2022/05/13/android-10-yuan-ma-bian-yi/"/>
      <url>/2022/05/13/android-10-yuan-ma-bian-yi/</url>
      
        <content type="html"><![CDATA[<p>选择下载Android源代码<a href="https://source.android.com/setup/start/build-numbers?hl=zh-cn">AOSP分支</a>，推荐使用清华镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/">https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/</a>  使用教程清华源已经详细给出，我这里选择的android-10.0.0_r40</p><h2 id="使用repo工具"><a href="#使用repo工具" class="headerlink" title="使用repo工具"></a>使用repo工具</h2><pre class=" language-bash"><code class="language-bash">curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o repo<span class="token function">chmod</span> +x repo<span class="token function">export</span> REPO_URL<span class="token operator">=</span><span class="token string">'https://mirrors.tuna.tsinghua.edu.cn/git/git-repo'</span>repo init -u https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/platform/manifest -b android-10.0.0_r40repo <span class="token function">sync</span></code></pre><h2 id="下载对应驱动"><a href="#下载对应驱动" class="headerlink" title="下载对应驱动"></a>下载对应驱动</h2><p><a href="https://developers.google.com/android/drivers#taimenqp1a.190711.019">https://developers.google.com/android/drivers#taimenqp1a.190711.019</a></p><p>将驱动解压到源码根目录下</p><pre class=" language-bash"><code class="language-bash">./extract-google_devices-blueline.sh./extract-qcom-blueline.sh</code></pre><p>以按ctrl+c进行中断，在此会提示需要输入I ACCEPT</p><h2 id="编译Android源码"><a href="#编译Android源码" class="headerlink" title="编译Android源码"></a>编译Android源码</h2><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> build/envsetup.shlunch<span class="token function">make</span> -j12</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Android源码 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
